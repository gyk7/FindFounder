2024-04-30 10:10:59.057 [background-preinit] INFO  o.h.validator.internal.util.Version
				- HV000001: Hibernate Validator 8.0.1.Final
2024-04-30 10:10:59.129 [restartedMain] INFO  c.e.demo.FindFounderApplication
				- Starting FindFounderApplication using Java 17.0.9 with PID 5840 (C:\ITStudy\NewTest\FindFounder\findFounder\target\classes started by Admin in C:\ITStudy\NewTest\FindFounder\findFounder)
2024-04-30 10:10:59.129 [restartedMain] INFO  c.e.demo.FindFounderApplication
				- No active profile set, falling back to 1 default profile: "default"
2024-04-30 10:10:59.173 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor
				- Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-04-30 10:10:59.174 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor
				- For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-04-30 10:11:01.085 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate
				- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-30 10:11:01.148 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate
				- Finished Spring Data repository scanning in 55 ms. Found 6 JPA repository interfaces.
2024-04-30 10:11:02.008 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer
				- Tomcat initialized with port 8080 (http)
2024-04-30 10:11:02.020 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol
				- Initializing ProtocolHandler ["http-nio-8080"]
2024-04-30 10:11:02.022 [restartedMain] INFO  o.a.catalina.core.StandardService
				- Starting service [Tomcat]
2024-04-30 10:11:02.022 [restartedMain] INFO  o.a.catalina.core.StandardEngine
				- Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-04-30 10:11:02.078 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]
				- Initializing Spring embedded WebApplicationContext
2024-04-30 10:11:02.078 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext
				- Root WebApplicationContext: initialization completed in 2903 ms
2024-04-30 10:11:02.537 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper
				- HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-30 10:11:02.611 [restartedMain] INFO  org.hibernate.Version
				- HHH000412: Hibernate ORM core version 6.4.1.Final
2024-04-30 10:11:02.656 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator
				- HHH000026: Second-level cache disabled
2024-04-30 10:11:02.899 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo
				- No LoadTimeWeaver setup: ignoring JPA class transformer
2024-04-30 10:11:02.928 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource
				- HikariPool-1 - Starting...
2024-04-30 10:11:03.318 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool
				- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6f7a1ced
2024-04-30 10:11:03.319 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource
				- HikariPool-1 - Start completed.
2024-04-30 10:11:03.370 [restartedMain] WARN  org.hibernate.orm.deprecation
				- HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-04-30 10:11:03.371 [restartedMain] WARN  org.hibernate.orm.deprecation
				- HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-04-30 10:11:04.362 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator
				- HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-04-30 10:11:04.599 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean
				- Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-30 10:11:05.016 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory
				- Hibernate is in classpath; If applicable, HQL parser will be used.
2024-04-30 10:11:05.479 [restartedMain] WARN  o.s.security.core.userdetails.User
				- User.withDefaultPasswordEncoder() is considered unsafe for production and is only intended for sample applications.
2024-04-30 10:11:05.692 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration
				- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-30 10:11:05.816 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping
				- Adding welcome page template: index
2024-04-30 10:11:06.535 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver
				- Exposing 1 endpoint(s) beneath base path '/actuator'
2024-04-30 10:11:06.586 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain
				- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@71d04b83, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f9db522, org.springframework.security.web.context.SecurityContextHolderFilter@88ea2d2, org.springframework.security.web.header.HeaderWriterFilter@41e73eba, org.springframework.web.filter.CorsFilter@5ab97a4d, org.springframework.security.web.authentication.logout.LogoutFilter@7d1e420f, com.example.demo.util.JwtAuthFilter@3d91bbc3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@215140bb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69dc5da3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e6e63a1, org.springframework.security.web.session.SessionManagementFilter@1e1d94b7, org.springframework.security.web.access.ExceptionTranslationFilter@5470358c, org.springframework.security.web.access.intercept.AuthorizationFilter@2373cf7c]
2024-04-30 10:11:07.098 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer
				- LiveReload server is running on port 35729
2024-04-30 10:11:07.154 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol
				- Starting ProtocolHandler ["http-nio-8080"]
2024-04-30 10:11:07.177 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer
				- Tomcat started on port 8080 (http) with context path ''
2024-04-30 10:11:07.192 [restartedMain] INFO  c.e.demo.FindFounderApplication
				- Started FindFounderApplication in 8.584 seconds (process running for 9.424)
2024-04-30 10:11:07.718 [RMI TCP Connection(9)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]
				- Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-30 10:11:07.718 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet
				- Initializing Servlet 'dispatcherServlet'
2024-04-30 10:11:07.720 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet
				- Completed initialization in 2 ms
2024-04-30 10:11:34.391 [http-nio-8080-exec-1] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor
				- [THYMELEAF][http-nio-8080-exec-1][index] Deprecated unwrapped fragment expression "nav.html :: navbar-top" found in template index, line 205, col 7. Please use the complete syntax of fragment expressions instead ("~{nav.html :: navbar-top}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2024-04-30 10:11:34.439 [http-nio-8080-exec-1] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor
				- [THYMELEAF][http-nio-8080-exec-1][index] Deprecated unwrapped fragment expression "nav.html :: navbar-side" found in template index, line 208, col 9. Please use the complete syntax of fragment expressions instead ("~{nav.html :: navbar-side}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2024-04-30 10:11:43.646 [http-nio-8080-exec-9] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:44.295 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:44.496 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:45.075 [http-nio-8080-exec-8] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:45.247 [http-nio-8080-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:45.712 [http-nio-8080-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:45.883 [http-nio-8080-exec-5] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:46.281 [http-nio-8080-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:46.439 [http-nio-8080-exec-10] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:46.821 [http-nio-8080-exec-3] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:46.995 [http-nio-8080-exec-9] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:47.190 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver
				- Resolved [org.springframework.web.bind.MissingRequestCookieException: Required cookie 'Set-Cookie' for method parameter type String is not present]
2024-04-30 10:11:55.536 [http-nio-8080-exec-4] INFO  c.e.d.controller.CustomerController
				- [Log] 로그인 : string
2024-04-30 10:11:57.424 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor
				- [THYMELEAF][http-nio-8080-exec-5][index] Deprecated unwrapped fragment expression "nav.html :: navbar-top" found in template index, line 205, col 7. Please use the complete syntax of fragment expressions instead ("~{nav.html :: navbar-top}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2024-04-30 10:11:57.427 [http-nio-8080-exec-5] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor
				- [THYMELEAF][http-nio-8080-exec-5][index] Deprecated unwrapped fragment expression "nav.html :: navbar-side" found in template index, line 208, col 9. Please use the complete syntax of fragment expressions instead ("~{nav.html :: navbar-side}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2024-04-30 10:11:59.141 [http-nio-8080-exec-2] INFO  c.e.demo.controller.SearchController
				- [Log] 해당 카테고리 업종 상권 가져옴 : string
2024-04-30 10:12:00.078 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet]
				- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>ValueError: Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "dIRycaUs8eu4VuQT3maU";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2620707281984"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1488</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708382960"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1466</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708383072"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1463</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708383184"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">872</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708383296"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">870</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708383408"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">855</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708383520"><EOL>  <h4>File <cite class="filename">"C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\main_views.py"</cite>,<EOL>      line <em class="line">115</em>,<EOL>      in <code class="function">receive_string</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>#json_data = response.json()</pre><EOL><pre class="line before"><span class="ws">        </span>#prefer_loc_value = json_data.get(&#39;preferLoc&#39;)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>#expend_amount=get_expendstatic(prefer_loc_value)</pre><EOL><pre class="line before"><span class="ws">        </span>#운영 영업 개월</pre><EOL><pre class="line current"><span class="ws">        </span>industry_life = get_statistics(prefer_loc_value)</pre><EOL><pre class="line after"><span class="ws">        </span>#유동인구</pre><EOL><pre class="line after"><span class="ws">        </span>seoul_moving_people=get_people(prefer_loc_value)</pre><EOL><pre class="line after"><span class="ws">        </span>#분기 평균 지출</pre><EOL><pre class="line after"><span class="ws">        </span>seoul_use_money=get_use_money(prefer_loc_value)</pre><EOL><pre class="line after"><span class="ws">        </span>#유사점포</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708387552"><EOL>  <h4>File <cite class="filename">"C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\Stat.py"</cite>,<EOL>      line <em class="line">17</em>,<EOL>      in <code class="function">get_statistics</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>elif signgu_cd_nm.endswith(&#39;구&#39;):</pre><EOL><pre class="line before"><span class="ws">        </span>#df = pd.read_csv(r&#39;C:\Users\82104\git\FindFounder\Flask\Findfounder\views\csvFolder\Seoul_people_moving_gu.csv&#39;, encoding=&#39;cp949&#39;)</pre><EOL><pre class="line before"><span class="ws">        </span>df = pd.read_csv(&#39;views\csvFolder\VwsmSignguIxQq2.csv&#39;, encoding=&#39;cp949&#39;)</pre><EOL><pre class="line before"><span class="ws">        </span>filter_col = &#39;SIGNGU_CD_NM&#39;</pre><EOL><pre class="line before"><span class="ws">    </span>else:</pre><EOL><pre class="line current"><span class="ws">        </span>raise ValueError(&#34;Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.&#34;)</pre><EOL><pre class="line after"><span class="ws">    </span># 입력된 자치구에 해당하는 데이터 필터링</pre><EOL><pre class="line after"><span class="ws">    </span>filtered_df = df[df[filter_col] == signgu_cd_nm]</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span># 자치구와 상권 변화 지수 정보를 담을 딕셔너리 초기화</pre><EOL><pre class="line after"><span class="ws">    </span>statistics = {}</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 1488, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 1466, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 1463, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 872, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 870, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 855, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]<EOL>  File &#34;C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\main_views.py&#34;, line 115, in receive_string<EOL>    industry_life = get_statistics(prefer_loc_value)<EOL>  File &#34;C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\Stat.py&#34;, line 17, in get_statistics<EOL>    raise ValueError(&#34;Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.&#34;)<EOL>ValueError: Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 1488, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 1466, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 1463, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 872, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 870, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 855, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]<EOL>  File "C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\main_views.py", line 115, in receive_string<EOL>    industry_life = get_statistics(prefer_loc_value)<EOL>  File "C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\Stat.py", line 17, in get_statistics<EOL>    raise ValueError("Invalid value for signgu_cd_nm. It should end with '동' or '구'.")<EOL>ValueError: Invalid value for signgu_cd_nm. It should end with '동' or '구'.<EOL><EOL><EOL>--><EOL>"] with root cause
org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>ValueError: Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.<EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "dIRycaUs8eu4VuQT3maU";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.<EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2620707281984"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1488</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708382960"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1466</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708383072"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1463</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708383184"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">872</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708383296"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">870</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708383408"><EOL>  <h4>File <cite class="filename">"C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">855</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708383520"><EOL>  <h4>File <cite class="filename">"C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\main_views.py"</cite>,<EOL>      line <em class="line">115</em>,<EOL>      in <code class="function">receive_string</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>#json_data = response.json()</pre><EOL><pre class="line before"><span class="ws">        </span>#prefer_loc_value = json_data.get(&#39;preferLoc&#39;)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>#expend_amount=get_expendstatic(prefer_loc_value)</pre><EOL><pre class="line before"><span class="ws">        </span>#운영 영업 개월</pre><EOL><pre class="line current"><span class="ws">        </span>industry_life = get_statistics(prefer_loc_value)</pre><EOL><pre class="line after"><span class="ws">        </span>#유동인구</pre><EOL><pre class="line after"><span class="ws">        </span>seoul_moving_people=get_people(prefer_loc_value)</pre><EOL><pre class="line after"><span class="ws">        </span>#분기 평균 지출</pre><EOL><pre class="line after"><span class="ws">        </span>seoul_use_money=get_use_money(prefer_loc_value)</pre><EOL><pre class="line after"><span class="ws">        </span>#유사점포</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2620708387552"><EOL>  <h4>File <cite class="filename">"C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\Stat.py"</cite>,<EOL>      line <em class="line">17</em>,<EOL>      in <code class="function">get_statistics</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>elif signgu_cd_nm.endswith(&#39;구&#39;):</pre><EOL><pre class="line before"><span class="ws">        </span>#df = pd.read_csv(r&#39;C:\Users\82104\git\FindFounder\Flask\Findfounder\views\csvFolder\Seoul_people_moving_gu.csv&#39;, encoding=&#39;cp949&#39;)</pre><EOL><pre class="line before"><span class="ws">        </span>df = pd.read_csv(&#39;views\csvFolder\VwsmSignguIxQq2.csv&#39;, encoding=&#39;cp949&#39;)</pre><EOL><pre class="line before"><span class="ws">        </span>filter_col = &#39;SIGNGU_CD_NM&#39;</pre><EOL><pre class="line before"><span class="ws">    </span>else:</pre><EOL><pre class="line current"><span class="ws">        </span>raise ValueError(&#34;Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.&#34;)</pre><EOL><pre class="line after"><span class="ws">    </span># 입력된 자치구에 해당하는 데이터 필터링</pre><EOL><pre class="line after"><span class="ws">    </span>filtered_df = df[df[filter_col] == signgu_cd_nm]</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span># 자치구와 상권 변화 지수 정보를 담을 딕셔너리 초기화</pre><EOL><pre class="line after"><span class="ws">    </span>statistics = {}</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.<EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 1488, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 1466, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 1463, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 872, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 870, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &#34;C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py&#34;, line 855, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]<EOL>  File &#34;C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\main_views.py&#34;, line 115, in receive_string<EOL>    industry_life = get_statistics(prefer_loc_value)<EOL>  File &#34;C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\Stat.py&#34;, line 17, in get_statistics<EOL>    raise ValueError(&#34;Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.&#34;)<EOL>ValueError: Invalid value for signgu_cd_nm. It should end with &#39;동&#39; or &#39;구&#39;.<EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 1488, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 1466, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 1463, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 872, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 870, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\Admin\.conda\envs\testconda\lib\site-packages\flask\app.py", line 855, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]<EOL>  File "C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\main_views.py", line 115, in receive_string<EOL>    industry_life = get_statistics(prefer_loc_value)<EOL>  File "C:\ITStudy\NewTest\FindFounder\Flask\Findfounder\views\Stat.py", line 17, in get_statistics<EOL>    raise ValueError("Invalid value for signgu_cd_nm. It should end with '동' or '구'.")<EOL>ValueError: Invalid value for signgu_cd_nm. It should end with '동' or '구'.<EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:102)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:932)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:881)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:498)
	at com.example.demo.service.ConsultService.searchStatic(ConsultService.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.example.demo.service.ConsultService$$SpringCGLIB$$0.searchStatic(<generated>)
	at com.example.demo.controller.ConsultController.Search(ConsultController.java:96)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.example.demo.util.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-04-30 10:12:12.152 [http-nio-8080-exec-4] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor
				- [THYMELEAF][http-nio-8080-exec-4][consult] Deprecated unwrapped fragment expression "nav.html :: navbar-top" found in template consult, line 85, col 7. Please use the complete syntax of fragment expressions instead ("~{nav.html :: navbar-top}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2024-04-30 10:12:12.155 [http-nio-8080-exec-4] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor
				- [THYMELEAF][http-nio-8080-exec-4][consult] Deprecated unwrapped fragment expression "nav.html :: navbar-side" found in template consult, line 88, col 9. Please use the complete syntax of fragment expressions instead ("~{nav.html :: navbar-side}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2024-04-30 10:12:20.833 [http-nio-8080-exec-2] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor
				- [THYMELEAF][http-nio-8080-exec-2][result] Deprecated unwrapped fragment expression "nav.html :: navbar-top" found in template result, line 113, col 7. Please use the complete syntax of fragment expressions instead ("~{nav.html :: navbar-top}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2024-04-30 10:12:20.838 [http-nio-8080-exec-2] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor
				- [THYMELEAF][http-nio-8080-exec-2][result] Deprecated unwrapped fragment expression "nav.html :: navbar-side" found in template result, line 116, col 9. Please use the complete syntax of fragment expressions instead ("~{nav.html :: navbar-side}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2024-04-30 10:14:23.833 [http-nio-8080-exec-4] WARN  o.t.s.p.AbstractStandardFragmentInsertionTagProcessor
				- [THYMELEAF][http-nio-8080-exec-4][result_more] Deprecated unwrapped fragment expression "nav.html :: navbar-side" found in template result_more, line 115, col 18. Please use the complete syntax of fragment expressions instead ("~{nav.html :: navbar-side}"). The old, unwrapped syntax for fragment expressions will be removed in future versions of Thymeleaf.
2024-04-30 10:24:22.103 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener
				- Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
2024-04-30 10:24:22.107 [Thread-5] INFO  o.a.coyote.http11.Http11NioProtocol
				- Stopping ProtocolHandler ["http-nio-8080"]
2024-04-30 10:24:22.132 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean
				- Closing JPA EntityManagerFactory for persistence unit 'default'
2024-04-30 10:24:22.136 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource
				- HikariPool-1 - Shutdown initiated...
2024-04-30 10:24:22.141 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource
				- HikariPool-1 - Shutdown completed.
2024-04-30 10:24:22.241 [restartedMain] INFO  c.e.demo.FindFounderApplication
				- Starting FindFounderApplication using Java 17.0.9 with PID 5840 (C:\ITStudy\NewTest\FindFounder\findFounder\target\classes started by Admin in C:\ITStudy\NewTest\FindFounder\findFounder)
2024-04-30 10:24:22.241 [restartedMain] INFO  c.e.demo.FindFounderApplication
				- No active profile set, falling back to 1 default profile: "default"
2024-04-30 10:24:22.556 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate
				- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-30 10:24:22.571 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate
				- Finished Spring Data repository scanning in 15 ms. Found 6 JPA repository interfaces.
2024-04-30 10:24:22.739 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer
				- Tomcat initialized with port 8080 (http)
2024-04-30 10:24:22.740 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol
				- Initializing ProtocolHandler ["http-nio-8080"]
2024-04-30 10:24:22.740 [restartedMain] INFO  o.a.catalina.core.StandardService
				- Starting service [Tomcat]
2024-04-30 10:24:22.740 [restartedMain] INFO  o.a.catalina.core.StandardEngine
				- Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-04-30 10:24:22.759 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]
				- Initializing Spring embedded WebApplicationContext
2024-04-30 10:24:22.759 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext
				- Root WebApplicationContext: initialization completed in 516 ms
2024-04-30 10:24:22.921 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper
				- HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-30 10:24:22.923 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator
				- HHH000026: Second-level cache disabled
2024-04-30 10:24:22.927 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo
				- No LoadTimeWeaver setup: ignoring JPA class transformer
2024-04-30 10:24:22.928 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource
				- HikariPool-2 - Starting...
2024-04-30 10:24:23.012 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool
				- HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5ec5268f
2024-04-30 10:24:23.012 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource
				- HikariPool-2 - Start completed.
2024-04-30 10:24:23.013 [restartedMain] WARN  org.hibernate.orm.deprecation
				- HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-04-30 10:24:23.013 [restartedMain] WARN  org.hibernate.orm.deprecation
				- HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-04-30 10:24:23.105 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator
				- HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-04-30 10:24:23.278 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean
				- Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-30 10:24:23.542 [restartedMain] WARN  o.s.security.core.userdetails.User
				- User.withDefaultPasswordEncoder() is considered unsafe for production and is only intended for sample applications.
2024-04-30 10:24:23.678 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration
				- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-04-30 10:24:23.710 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping
				- Adding welcome page template: index
2024-04-30 10:24:24.171 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver
				- Exposing 1 endpoint(s) beneath base path '/actuator'
2024-04-30 10:24:24.197 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain
				- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@68bb8426, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@485616d0, org.springframework.security.web.context.SecurityContextHolderFilter@a54805f, org.springframework.security.web.header.HeaderWriterFilter@140e4f0b, org.springframework.web.filter.CorsFilter@433a9183, org.springframework.security.web.authentication.logout.LogoutFilter@40a0009e, com.example.demo.util.JwtAuthFilter@758cc21f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57bc5698, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f1a3ec8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41a2f23c, org.springframework.security.web.session.SessionManagementFilter@33981c45, org.springframework.security.web.access.ExceptionTranslationFilter@74529a3a, org.springframework.security.web.access.intercept.AuthorizationFilter@421c4a33]
2024-04-30 10:24:24.452 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer
				- LiveReload server is running on port 35729
2024-04-30 10:24:24.473 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol
				- Starting ProtocolHandler ["http-nio-8080"]
2024-04-30 10:24:24.476 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer
				- Tomcat started on port 8080 (http) with context path ''
2024-04-30 10:24:24.486 [restartedMain] INFO  c.e.demo.FindFounderApplication
				- Started FindFounderApplication in 2.277 seconds (process running for 806.767)
2024-04-30 10:24:24.491 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener
				- Condition evaluation unchanged
